{"swagger":"2.0","info":{"title":"Staffing Systems APIs","description":"Staffing Systems APIs.","contact":{"name":"Staffing Team Support","email":"jigsaw-support@thoughtworks.com"},"version":"1.0.0"},"host":"api.thoughtworks.net","basePath":"/jigsaw","produces":["application/json"],"tags":[{"name":"people","description":"People API"},{"name":"leave","description":"Leave API"},{"name":"assignments","description":"Assignments API"},{"name":"work_calendars","description":"Work Calendar API"},{"name":"staffing_requests","description":"Staffing Requests API"}],"paths":{"/staffing_requests":{"get":{"tags":["staffing_requests"],"description":"Fetches staffing requests.\n","parameters":[{"name":"group_ids","in":"query","required":false,"type":"array","items":{"type":"string"},"description":"Get staffing requests filtered by one or more groups of staffing\nrequests. Use the group ID. You should use either Staffing Request ID\nor Opportunity ID to use this filter.\n\nExample: /staffing_requests?opportunity_ids[]=006W0000005pB9BIAU&group_ids[]=open_role&group_ids[]=past_assignment\n","display_groups":true},{"name":"offices","in":"query","required":false,"type":"array","items":{"type":"string"},"description":"Get staffing requests filtered by one or more offices\n\nExample: /staffing_requests?offices[]=Chicago&offices[]=Porto Alegre\n"},{"name":"ids","in":"query","required":false,"type":"array","items":{"type":"string"},"description":"Get staffing requests filtered by one or more ids. Use Salesforce opportunity ID.\n\nExample: /staffing_requests?ids[]=1234&ids[]=4321\n"},{"name":"include_internal_staffing_requests","in":"query","required":false,"type":"boolean","defaultValue":true,"description":"Include staffing requests belonging to internal projects. The response\nwill also include internal projects created in Jigsaw that are not\navailable in SFDC. Default value: \"true\".\n"},{"name":"opportunity_ids","in":"query","required":false,"type":"array","items":{"type":"string"},"description":"Get staffing requests filtered by one or more opportunities. Use\nSalesforce opportunity ID.\n\nExample: /staffing_requests?opportunity_ids[]=006W0000005pB9BIAU&opportunity_ids[]=006W0000005ngL5IAI\n"},{"name":"account_ids","in":"query","required":false,"type":"array","items":{"type":"string"},"description":"Get staffing requests filtered by one or more accounts. Use\nSalesforce account ID.\n\nExample: /staffing_requests?account_ids[]=0015000000MlJ6mAAF\n"},{"name":"overlaps","in":"query","required":false,"type":"string","description":"Get staffing requests which overlaps the specified date or date range.\n\nExample: /staffing_requests?opportunity_ids[]=006W0000005pB9BIAU&overlaps=31-12-2010\nExample with range: /staffing_requests?opportunity_ids[]=006W0000005pB9BIAU&overlaps=01-12-2010,31-12-2010\n"},{"name":"page","in":"query","required":false,"type":"integer","description":"The staffing request endpoint is automatically paginated, even if you do not pass the 'page' parameter.\nBut you can still pass the 'page' parameter as following.\n\nExample: /staffing_requests?page=2\n"},{"name":"starting_on","in":"query","required":false,"type":"string","description":"Get staffing requests filtered by start date, where the record's start date is equal or greater than the queried value.\n\nExample: /staffing_requests?opportunity_ids[]=006W0000005pB9BIAU&starting_on=31-12-2010\n"}],"responses":{"200":{"description":"Staffing Requests returned successfully.","schema":{"$ref":"#/definitions/StaffingRequest"}},"400":{"description":"Bad request.\nFilter by Group IDs must be combined with filter by IDs or filter by\nOpportunity IDs.\n"},"404":{"description":"Opportunity not found.\n\nIf none of the opportunity IDs requested were found.\n"}}}},"/people":{"get":{"tags":["people"],"description":"Returns a list of all current employee (does not include exited or deceased ones) of the company.\n","parameters":[{"name":"page","in":"query","required":false,"type":"integer","description":"The people endpoint is automatically paginated, even if you do not pass the 'page' parameter.\nBut you can still pass the 'page' parameter as following.\n\nExample: /people?page=2\n"},{"name":"ids","in":"query","type":"array","items":{"type":"string"},"description":"Query people by their employee ids. Example: /people?ids[]=10240&ids[]=10241","required":false},{"name":"staffing_office","in":"query","type":"string","description":"Query people by their staffing office name or id. Example: /people?staffing_office=Recife.","required":false},{"name":"working_office","in":"query","type":"string","description":"Query people by their working office name or id. Example: /people?working_office=Recife.","required":false},{"name":"home_office","in":"query","type":"string","description":"Query people by their home office name or id. Example: /people?home_office=Recife.","required":false},{"name":"role","in":"query","type":"string","description":"Query people by their role. Example: /people?role=Dev","required":false},{"name":"grade","in":"query","type":"string","description":"Query people by their grade. Example: /people?grade=Con","required":false}],"responses":{"200":{"description":"Successful.","schema":{"$ref":"#/definitions/Person"}},"400":{"description":"Invalid page number.","schema":{"type":"object","properties":{"page":{"type":"array","items":{"type":"string"}}}},"examples":{"application/json":{"page":["invalid page number"]}}}}}},"/people/{id}":{"get":{"tags":["people"],"description":"Returns details of the given person.","parameters":[{"name":"id","in":"path","description":"The person's employee ID. Example: 10854.","type":"string","required":true}],"responses":{"200":{"description":"Successful.","schema":{"$ref":"#/definitions/Person"}},"404":{"description":"Person could not be found."}}}},"/people/working_offices":{"get":{"private":true,"tags":["people"],"description":"Returns all working offices history.","parameters":[{"name":"starting_on","in":"query","required":false,"type":"string","items":{"type":"string"},"description":"Get working offices filtered by start date, where the record's start date is equal or greater than the queried value.\n\nExample: /people/working_offices?starting_on=31-12-2010\n"},{"name":"include_exited","in":"query","required":false,"type":"boolean","items":{"type":"string"},"description":"Get working offices including exited consultants when flag is set to true.\n\nExample: /people/working_offices?include_exited=true\n"},{"name":"overlaps","in":"query","required":false,"type":"string","items":{"type":"string"},"description":"Get working offices which overlaps the specified date.\nExample: /people/working_offices?overlaps=31-12-2010\n"}],"responses":{"200":{"description":"List of the following schema.","schema":{"$ref":"#/definitions/WorkingOfficeHistory"}}}}},"/people/{id}/work_experiences":{"get":{"tags":["people"],"description":"Returns all work experiences the person has ever worked in.","parameters":[{"name":"id","in":"path","description":"The person's employee ID. Example: 10854.","type":"string","required":true}],"responses":{"200":{"description":"List of the following schema.","schema":{"$ref":"#/definitions/WorkExperience"}},"404":{"description":"Person not found.","schema":{"type":"object","properties":{"message":{"type":"string"}}}}}}},"/people/{id}/staffing_offices":{"get":{"tags":["people"],"description":"Returns all offices the person has been staffed in.","parameters":[{"name":"id","in":"path","description":"The person's employee ID. Example: 10854.","type":"string","required":true}],"responses":{"200":{"description":"List of the following schema.","schema":{"$ref":"#/definitions/StaffingOffice"}},"404":{"description":"Person not found.","schema":{"type":"object","properties":{"message":{"type":"string"}}}}}}},"/people/staffing_offices":{"get":{"private":true,"tags":["people"],"description":"Returns all staffing offices history.","parameters":[{"name":"starting_on","in":"query","required":false,"type":"string","items":{"type":"string"},"description":"Get staffing offices filtered by start date, where the record's start date is equal or greater than the queried value.\n\nExample: /people/staffing_offices?starting_on=31-12-2010\n"},{"name":"include_exited","in":"query","required":false,"type":"boolean","items":{"type":"string"},"description":"Get staffing offices including exited consultants when flag is set to true.\n\nExample: /people/staffing_offices?include_exited=true\n"},{"name":"overlaps","in":"query","required":false,"type":"string","items":{"type":"string"},"description":"Get staffing offices which overlaps the specified date.\nExample: /people/staffing_offices?overlaps=31-12-2010\n"}],"responses":{"200":{"description":"List of the following schema.","schema":{"$ref":"#/definitions/StaffingOfficeHistory"}}}}},"/people/{id}/working_offices":{"get":{"tags":["people"],"description":"Returns all offices the person has ever worked in.","parameters":[{"name":"id","in":"path","description":"The person's employee ID. Example: 10854.","type":"string","required":true}],"responses":{"200":{"description":"List of the following schema.","schema":{"$ref":"#/definitions/WorkingOffice"}},"404":{"description":"Person not found.","schema":{"type":"object","properties":{"message":{"type":"string"}}}}}}},"/people/{id}/skills":{"get":{"tags":["people"],"description":"Returns all the person skills.","parameters":[{"name":"id","in":"path","description":"The person's employee ID. Example: 10854.","type":"string","required":true}],"responses":{"200":{"description":"List of the following schema.","schema":{"$ref":"#/definitions/Skill"}},"404":{"description":"Person not found."}}}},"/leave":{"get":{"tags":["leave"],"description":"Retrieves information about leaves, optionally filtered by one or more employees\n","parameters":[{"name":"page","in":"query","required":false,"type":"integer","description":"The leave endpoint is automatically paginated, even if you do not pass the 'page' parameter.\nBut you can still pass the 'page' parameter as following.\n\nExample: /leave?page=2\n"},{"name":"employee_ids","in":"query","required":false,"type":"array","items":{"type":"string"},"description":"Get leave records filtered by one or more employees.\n\nExample: /leave?employee_ids[]=16872&employee_ids[]=15516\n"},{"name":"start_date","in":"query","required":false,"type":"string","items":{"type":"string"},"description":"Get leave records filtered by start date, where the record's start date is greater than or equal to the queried value.\n\nCan be used alongside with the end_date filter for fetching records in a range of dates.\n\nExample: /leave?start_date=31-12-2010\n"},{"name":"end_date","in":"query","required":false,"type":"string","items":{"type":"string"},"description":"Get leave records filtered by end date, where the record's end date is smaller than or equal to the queried value.\n\nCan be used alongside with the start_date filter for fetching records in a range of dates.\n\nExample: /leave?start_date=31-12-2010&end_date=31-01-2011\n"},{"name":"overlaps","in":"query","required":false,"type":"string","description":"Get leave records which overlaps the specified date or date range.\nExample: /leave?overlaps=2015-12-20\nExample with range: /leave?overlaps=2015-12-20,2015-12-30\n"}],"responses":{"200":{"description":"Successful.","schema":{"$ref":"#/definitions/Leave"}}}},"post":{"tags":["leave"],"description":"Creates a leave record.","consumes":["application/json"],"parameters":[{"in":"body","name":"body","description":"Leave object that needs to be added.","required":true,"schema":{"type":"object","properties":{"consultant":{"type":"object","properties":{"employeeId":{"type":"string"}}},"type":{"type":"string"},"period":{"type":"object","properties":{"startsOn":{"type":"string"},"startsOnHalf":{"type":"boolean"},"endsOn":{"type":"string"},"endsOnHalf":{"type":"boolean"}}}}}}],"responses":{"201":{"description":"Leave has been successfully created."},"400":{"description":"Invalid JSON.","schema":{"type":"object","properties":{"message":{"type":"string"}}}},"422":{"description":"The resource could not be created, e.g. leave already exists on the given date, missing attributes on the request body, etc.","schema":{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}},"examples":{"base":["This leave record overlaps with an existing record"]}}}}},"/leave/{id}":{"delete":{"tags":["leave"],"description":"Deletes an existing leave.","consumes":["application/json"],"parameters":[{"name":"id","in":"path","description":"The leave's ID.","type":"string","required":true}],"responses":{"204":{"description":"Leave has been successfully deleted."},"404":{"description":"Leave was not found.","schema":{"type":"object","properties":{"message":{"type":"string"}}}}}},"put":{"tags":["leave"],"description":"Updates an existing leave. All attributes are optional - only submitted attributes will be updated.","consumes":["application/json"],"parameters":[{"name":"body","in":"body","description":"The leave's ID.","type":"string","required":true,"schema":{"properties":{"period":{"type":"object","properties":{"startsOn":{"type":"string"},"startsOnHalf":{"type":"boolean"},"endsOn":{"type":"string"},"endsOnHalf":{"type":"boolean"}}}}}}],"responses":{"204":{"description":"Leave has been successfully updated."},"400":{"description":"Invalid JSON.","schema":{"type":"object","properties":{"message":{"type":"string"}}}},"422":{"description":"The resource could not be created, e.g. leave already exists on the given date, missing attributes on the request body, etc.","schema":{"type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}}}}}},"/assignments":{"get":{"tags":["assignments"],"description":"Fetches all assignments.\n","parameters":[{"name":"page","in":"query","required":false,"type":"integer","description":"The assignments endpoint is automatically paginated, even if you do not pass the 'page' parameter.\nBut you can still pass the 'page' parameter as following.\nExample: /assignments?page=2\n"},{"name":"ids","in":"query","required":false,"type":"array","items":{"type":"string"},"description":"Get assignments filtered by one or more assignment ids.\n\nExample: /assignments?ids[]=26583&ids[]=10328\n"},{"name":"current_only","in":"query","type":"boolean","description":"Filter out past assignments (assignments that ended before today). Example: /assignments?current_only=true\n","required":false},{"name":"employee_ids","in":"query","required":false,"type":"array","items":{"type":"string"},"description":"Get assignments filtered by one or more employees.\nExample: /assignments?employee_ids[]=16872&employee_ids[]=15516\n"},{"name":"project_ids","in":"query","required":false,"type":"array","items":{"type":"string"},"description":"Get assignments filtered by one or more project IDs. Remember a\nproject ID is different than its Salesforce ID (sfdcId attribute).\n"},{"name":"shadow","in":"query","required":false,"type":"boolean","description":"Get assignments filtered by shadow or non shadow. Example:\n/assignments?shadow=false\n"},{"name":"project_type","in":"query","required":false,"type":"string","description":"Get assignments filtered by project type, which can be\n'InternalProject' or 'ExternalProject'. Example:\n/assignments?project_type=ExternalProject\n"},{"name":"project_status","in":"query","required":false,"type":"string","description":"Get assignments filtered by project status, which can be\n'Active' or 'Closed'. Example:\n/assignments?project_status=Closed\n"},{"name":"starting_on","in":"query","required":false,"type":"string","description":"Get assignments filtered by start date, where the record's start date is equal or greater than the queried value.\n\nExample: /assignments?starting_on=31-12-2010\n"},{"name":"opportunity_ids","in":"query","required":false,"type":"array","items":{"type":"string"},"description":"Get assignments filtered by one or more opportunityIDs.\nExample: /assignments?opportunity_ids[]=0065000000E3od3AAB\n"},{"name":"overlaps","in":"query","required":false,"type":"string","description":"Get assignments which overlaps the specified date or date range.\nExample: /assignments?opportunity_ids[]=006W0000005pB9BIAU&overlaps=31-12-2010\nExample with range: /assignments?opportunity_ids[]=006W0000005pB9BIAU&overlaps=01-12-2010,31-12-2010\n"}],"responses":{"200":{"description":"Assignment returned successfully.","schema":{"$ref":"#/definitions/Assignment"}},"400":{"description":"Invalid page number.","schema":{"type":"object","properties":{"page":{"type":"array","items":{"type":"string"}}}},"examples":{"application/json":{"page":["invalid page number"]}}}}}},"/work_calendars/{office_name}/{year}":{"get":{"tags":["work_calendars"],"description":"Return list of work calendars for a given office and year.\n","parameters":[{"name":"office_name","in":"path","type":"string","description":"Fetch work calendars for the given office name. Example: /work_calendars/London/2014.\nObs: As of now there is no API in the Staffing Systems to retrieve a list of offices.\n","required":false},{"name":"year","in":"path","type":"string","format":"YYYY","description":"Fetch work calendars by year. Format: YYYY.\nExample: /work_calendars/London/2015\n","required":true}],"responses":{"200":{"description":"Array of the following schema.","schema":{"$ref":"#/definitions/WorkingCalendar"}}}}}},"definitions":{"StaffingRequest":{"type":"object","properties":{"id":{"type":"string"},"project":{"type":"object","properties":{"isInternal":{"type":"boolean"},"name":{"type":"string"},"opportunityId":{"type":"string"},"rateType":{"type":"string"},"currency":{"type":"string"}}},"account":{"type":"object","properties":{"name":{"type":"string"},"accountSfId":{"type":"string"},"id":{"type":"string"}}},"startDate":{"type":"string"},"endDate":{"type":"string"},"grade":{"type":"object","properties":{"name":{"type":"string"}}},"role":{"type":"object","properties":{"code":{"type":"string"},"name":{"type":"string"}}},"staffingOffice":{"type":"object","properties":{"name":{"type":"string"}}},"effort":{"type":"number"},"probability":{"type":"number"},"comments":{"type":"string"},"workInOffices":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"startDate":{"type":"string"},"endDate":{"type":"string"},"rate":{"type":"string"}}}},"group":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"}}},"assignmentsIds":{"type":"array","items":{"type":"string"}}}},"StaffingOfficeHistory":{"type":"object","properties":{"employeeId":{"type":"string"},"staffingOffices":{"type":"array","items":{"type":"object","properties":{"office":{"type":"object","properties":{"name":{"type":"string"}}},"asOfDate":{"type":"string"},"endDate":{"type":["string",null]}}}}}},"Person":{"type":"object","properties":{"employeeId":{"type":"string"},"loginName":{"type":"string"},"preferredName":{"type":"string"},"gender":{"type":"string"},"preferredPronouns":{"type":"object","properties":{"english":{"type":"array","items":{"type":"string"}},"other":{"type":"string"}}},"picture":{"type":"object","properties":{"url":{"type":"string"}}},"role":{"type":"object","properties":{"name":{"type":"string"}}},"grade":{"type":"object","properties":{"name":{"type":"string"}}},"department":{"type":"object","properties":{"name":{"type":"string"}}},"hireDate":{"type":"string"},"totalExperience":{"type":"number"},"twExperience":{"type":"number"},"assignable":{"type":"boolean"},"homeOffice":{"type":"object","properties":{"name":{"type":"string"}}},"workingOffice":{"type":"object","properties":{"name":{"type":"string"}}},"staffingOffice":{"type":"object","properties":{"name":{"type":"string"}}},"projectPreferences":{"type":"string"},"longTermGoal":{"type":"string"},"travelPreferences":{"type":"object","properties":{"domestic":{"type":"boolean"},"international":{"type":"boolean"},"travelDetails":{"type":"string"}}}}},"WorkExperience":{"type":"object","properties":{"account":{"type":"object","properties":{"name":{"type":"string"}}},"project":{"type":"object","properties":{"name":{"type":"string"}}},"duration":{"type":"object","properties":{"startsOn":{"type":"string"},"endsOn":{"type":"string"}}}}},"StaffingOffice":{"type":"object","properties":{"office":{"type":"object","properties":{"name":{"type":"string"}}},"asOfDate":{"type":"string"},"endDate":{"type":"string"}}},"WorkingOfficeHistory":{"type":"object","properties":{"employeeId":{"type":"string"},"workingOffices":{"type":"array","items":{"type":"object","properties":{"office":{"type":"object","properties":{"name":{"type":"string"}}},"asOfDate":{"type":"string"},"endDate":{"type":["string",null]}}}}}},"WorkingOffice":{"type":"object","properties":{"office":{"type":"object","properties":{"name":{"type":"string"}}},"asOfDate":{"type":"string"},"endDate":{"type":"string"}}},"Skill":{"type":"object","properties":{"name":{"type":"string"},"rating":{"type":"integer"},"group":{"type":"object","properties":{"name":{"type":"string"}}}}},"Leave":{"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string"},"period":{"type":"object","properties":{"startsOn":{"type":"string"},"startsOnHalf":{"type":"boolean"},"endsOn":{"type":"string"},"endsOnHalf":{"type":"boolean"}}},"consultant":{"type":"object","properties":{"employeeId":{"type":"string"},"preferredName":{"type":"string"}}}}},"Assignment":{"type":"object","properties":{"id":{"type":"string"},"consultant":{"type":"object","properties":{"employeeId":{"type":"string"},"name":{"type":"string"}}},"staffingRequest":{"type":"object","properties":{"id":{"type":"string"}}},"effort":{"type":"string"},"shadow":{"type":"string"},"account":{"type":"object","properties":{"name":{"type":"string"}}},"project":{"type":"object","properties":{"id":{"type":"string"},"opportunityId":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"}}},"duration":{"type":"object","properties":{"startsOn":{"type":"string"},"endsOn":{"type":"string"}}}}},"WorkingCalendar":{"type":"object","properties":{"date":{"type":"string"},"description":{"type":"string"},"isWorkDay":{"type":"boolean"},"isHalfDay":{"type":"boolean"},"office":{"type":"object","properties":{"name":{"type":"string"},"code":{"type":"string"}}}}}},"schemes":["https"],"securityDefinitions":{"Bearer":{"name":"Authorization","in":"header","type":"apiKey","description":"Authentication Token"}},"security":[{"Bearer":[]}]}